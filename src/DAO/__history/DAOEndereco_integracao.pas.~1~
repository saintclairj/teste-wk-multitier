Unit DALendereco_integracao;

interface

  uses FireDAC.Stan.Intf, FireDAC.Stan.Option,FireDAC.Stan.Param, FireDAC.Stan.Error,FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,FireDAC.Comp.DataSet, FireDAC.Comp.Client, DTOendereco_integracao, Func;

  Type

  TDALendereco_integracao = Class
  public
    function inserir(dtoendereco_integracao : TDTOendereco_integracao) : Boolean;
    function atualizar(dtoendereco_integracao : TDTOendereco_integracao) : Boolean;
    function excluir(dtoendereco_integracao : TDTOendereco_integracao) : Boolean;
    function preencherEntidade(dtoendereco_integracao : TDTOendereco_integracao) : Boolean;
    procedure preencherDTO(Query: TADOQuery; dtoendereco_integracao : TDTOendereco_integracao);
  end;


implementation

function TDALendereco_integracao.inserir(dtoendereco_integracao : TDTOendereco_integracao) : Boolean;
begin
  try
    Result := True;
    with DM.QAux do
    begin
      Close;
      SQL.Clear;
      SQL.Add('INSERT INTO endereco_integracao(');
      SQL.Add('dsuf,nmcidade,nmbairro,nmlogradouro,dscomplemento)');

      SQL.Add('VALUES ('); 
      SQL.Add(QuotedStr2(dtoendereco_integracao.dsuf)+','+QuotedStr2(dtoendereco_integracao.nmcidade)+','+QuotedStr2(dtoendereco_integracao.nmbairro)+','+QuotedStr2(dtoendereco_integracao.nmlogradouro)+','+QuotedStr2(dtoendereco_integracao.dscomplemen+')');
      ExecSQL;
    end;
  except
    On erro:Exception do 
    begin
      MessageDlg('Ocorreu um erro ao inserir endereco_integracao! '
      + 'Mensagem de erro : ' + #13 + erro.message, mtInformation, [MbOk], 0);
      Result := false;
      DM.QAux.SQL.SaveToFile('C:\sihl\sql.txt');
    end;
  end;
end;


function TDALendereco_integracao.atualizar(dtoendereco_integracao : TDTOendereco_integracao) : Boolean;
begin
  try
    Result := True;
    with DM.QAux do
    begin
      Close;
      SQL.Clear;
      SQL.Add('UPDATE endereco_integracao SET');
      SQL.Add('idendereco = ' + QuotedStr2(dtoendereco_integracao.idendereco)+',');
      SQL.Add('nmcidade = ' + QuotedStr2(dtoendereco_integracao.nmcidade)+',');
      SQL.Add('nmbairro = ' + QuotedStr2(dtoendereco_integracao.nmbairro)+',');
      SQL.Add('nmlogradouro = ' + QuotedStr2(dtoendereco_integracao.nmlogradouro)+',');
      SQL.Add('dscomplemento = ' + QuotedStr2(dtoendereco_integracao.dscomplemento));

      SQL.Add('WHERE idendereco = ' + dtoendereco_integracao.idendereco); 
      ExecSQL;
    end;
  except
    On erro:Exception do 
    begin
      MessageDlg('Ocorreu um erro ao atualizar endereco_integracao! '
      + 'Mensagem de erro : ' + #13 + erro.message, mtInformation, [MbOk], 0);
      Result := false;
      DM.QAux.SQL.SaveToFile('C:\sihl\sql.txt');
    end;
  end;
end;


function TDALendereco_integracao.excluir(dtoendereco_integracao : TDTOendereco_integracao) : Boolean;
begin
  try
    Result := True;
    with DM.QAux do
    begin
      Close;
      SQL.Clear;
      SQL.Add('DELETE FROM endereco_integracao');
      SQL.Add('WHERE idendereco = :pidendereco'); 
      ParamByName('pidendereco').Value := dtoendereco_integracao.idendereco;
      ExecSQL;
    end;
  except
    On erro:Exception do 
    begin
      MessageDlg('Ocorreu um erro ao deletar endereco_integracao! '
      + 'Mensagem de erro : ' + #13 + erro.message, mtInformation, [MbOk], 0);
      Result := false;
      DM.QAux.SQL.SaveToFile('C:\sihl\sql.txt');
    end;
  end;
end;


function TDALendereco_integracao.preencherEntidade(dtoendereco_integracao : TDTOendereco_integracao) : Boolean;
begin
  try
    Result := True;
    with DM.QAux do
    begin
      Close;
      SQL.Clear;
      SQL.Add('SELECT ');
      SQL.Add('idendereco,dsuf,nmcidade,nmbairro,nmlogradouro,dscomplemento');

      SQL.Add('FROM endereco_integracao'); 
      SQL.Add('WHERE idendereco = :pidendereco'); 
      ParamByName('pidendereco').Value := dtoendereco_integracao.idendereco;
      Open;
      dtoendereco_integracao.idendereco := FieldByName('idendereco').AsString;
      dtoendereco_integracao.dsuf := FieldByName('dsuf').AsString;
      dtoendereco_integracao.nmcidade := FieldByName('nmcidade').AsString;
      dtoendereco_integracao.nmbairro := FieldByName('nmbairro').AsString;
      dtoendereco_integracao.nmlogradouro := FieldByName('nmlogradouro').AsString;
      dtoendereco_integracao.dscomplemento := FieldByName('dscomplemento').AsString;
      Close;

    end;
  except
    On erro:Exception do 
    begin
      MessageDlg('Ocorreu um erro ao preencher a entidade endereco_integracao! '
      + 'Mensagem de erro : ' + #13 + erro.message, mtInformation, [MbOk], 0);
      Result := false;
      DM.QAux.SQL.SaveToFile('C:\sihl\sql.txt');
    end;
  end;
end;


procedure TDALendereco_integracao.preencherDTO(Query:TADOQuery; dtoendereco_integracao : TDTOendereco_integracao);
begin
  try
    with Query do
    begin
      dtoendereco_integracao.idendereco := FieldByName('idendereco').AsString;
      dtoendereco_integracao.dsuf := FieldByName('dsuf').AsString;
      dtoendereco_integracao.nmcidade := FieldByName('nmcidade').AsString;
      dtoendereco_integracao.nmbairro := FieldByName('nmbairro').AsString;
      dtoendereco_integracao.nmlogradouro := FieldByName('nmlogradouro').AsString;
      dtoendereco_integracao.dscomplemento := FieldByName('dscomplemento').AsString;

    end;
  except
    On erro:Exception do 
    begin
      MessageDlg('Ocorreu um erro ao preencher DTOendereco_integracao! '
      + 'Mensagem de erro : ' + #13 + erro.message, mtInformation, [MbOk], 0);
    end;
  end;
end;
end.