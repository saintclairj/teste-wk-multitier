unit Principal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Grids, Vcl.DBGrids,
  Vcl.ExtCtrls, Vcl.Buttons, CTRPessoa, Pessoa, PessoaEndereco, CTRPessoaEndereco,
  CTREndereco, CTREndereco_Integracao,
  Vcl.StdCtrls, Vcl.Mask, IPPeerClient, REST.Client, Data.Bind.Components,
  Data.Bind.ObjectScope;

type
  TfrmPrincipal = class(TForm)
    PC: TPageControl;
    TabLista: TTabSheet;
    TabCadastro: TTabSheet;
    mtLista: TFDMemTable;
    DSLista: TDataSource;
    Panel1: TPanel;
    SpeedButton1: TSpeedButton;
    Label1: TLabel;
    editId: TEdit;
    editNome: TEdit;
    Label2: TLabel;
    editSobrenome: TEdit;
    Label3: TLabel;
    editDocumento: TEdit;
    Label4: TLabel;
    Label5: TLabel;
    editDataRegistro: TMaskEdit;
    SpeedButton2: TSpeedButton;
    Panel2: TPanel;
    Panel3: TPanel;
    DBGrid1: TDBGrid;
    BtNovo: TSpeedButton;
    BtEditar: TSpeedButton;
    BtExcluir: TSpeedButton;
    btImportar: TSpeedButton;
    Label6: TLabel;
    editCEP: TEdit;
    Label7: TLabel;
    editUF: TEdit;
    Label8: TLabel;
    editCidade: TEdit;
    Label9: TLabel;
    editBairro: TEdit;
    Label10: TLabel;
    editEndereco: TEdit;
    Label11: TLabel;
    editComplemento: TEdit;
    od: TOpenDialog;
    Label12: TLabel;
    cbTipoPessoa: TComboBox;
    RCCep: TRESTClient;
    RReqCEP: TRESTRequest;
    RResCep: TRESTResponse;
    Panel4: TPanel;
    SpeedButton3: TSpeedButton;
    procedure SpeedButton1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure SpeedButton2Click(Sender: TObject);
    procedure DBGrid1DblClick(Sender: TObject);
    procedure BtEditarClick(Sender: TObject);
    procedure BtExcluirClick(Sender: TObject);
    procedure DBGrid1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure BtNovoClick(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure btImportarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    CTRPessoa: TCTRPessoa;
    Pessoa: TPessoa;
    CTRPessoaEndereco: TCTRPessoaEndereco;
    PessoaEndereco: TPessoaEndereco;
    CTREndereco: TCTREndereco;
    CTREndereco_Integracao: TCTREndereco_Integracao;


    procedure pesquisar;
    procedure editar;
    procedure excluir;
    procedure limparCampos;
    procedure salvar;
  end;

var
  frmPrincipal: TfrmPrincipal;

implementation
uses UDM, Func;

{$R *.dfm}

procedure TfrmPrincipal.BtEditarClick(Sender: TObject);
begin
  editar;
end;

procedure TfrmPrincipal.BtExcluirClick(Sender: TObject);
begin
  excluir;
end;

procedure TfrmPrincipal.btImportarClick(Sender: TObject);
var
  r: TRetornoApi;
begin
  if od.Execute then
    begin
      r:= CTRPessoa.enviarArquivo(od.FileName);
      Tfunc.interpretarRetorno(r);
    end;
end;

procedure TfrmPrincipal.BtNovoClick(Sender: TObject);
begin
  Pessoa:= TPessoa.Create;
  limparCampos;
  PC.ActivePage:= TabCadastro;
  editNome.SetFocus;
end;

procedure TfrmPrincipal.DBGrid1DblClick(Sender: TObject);
begin
  editar;
end;

procedure TfrmPrincipal.DBGrid1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = VK_DELETE then
    begin
      excluir;
    end;
end;

procedure TfrmPrincipal.editar;
begin
  if not mtLista.IsEmpty then
    begin
      CTRPessoa.preencherEntidade(mtLista, PessoaEndereco.Pessoa);
      CTREndereco.preencherEntidade(mtLista, PessoaEndereco.endereco);
      CTREndereco_Integracao.preencherEntidade(mtLista, PessoaEndereco.endereco_integracao);

      editId.Text:= PessoaEndereco.Pessoa.idpessoa;
      cbTipoPessoa.ItemIndex:= StrToInt(PessoaEndereco.Pessoa.flnatureza);
      editNome.Text:= PessoaEndereco.Pessoa.nmprimeiro;
      editSobrenome.Text := PessoaEndereco.Pessoa.nmsegundo;
      editDocumento.Text := PessoaEndereco.Pessoa.dsdocumento;
      editDataRegistro.Text := PessoaEndereco.Pessoa.dtregistro;

      editCEP.Text := PessoaEndereco.endereco.dscep;
      editEndereco.Text := PessoaEndereco.endereco_integracao.nmlogradouro;
      editComplemento.Text := PessoaEndereco.endereco_integracao.dscomplemento;
      editUF.Text := PessoaEndereco.endereco_integracao.dsuf;
      editCidade.Text := PessoaEndereco.endereco_integracao.nmcidade;
      editBairro.Text := PessoaEndereco.endereco_integracao.nmbairro;

      PC.ActivePage:= TabCadastro;
      editNome.SetFocus;
    end;
end;

procedure TfrmPrincipal.excluir;
var
  r: TRetornoApi;
begin
   if not mtLista.IsEmpty then
    begin
      if TFunc.ConfirmarExclusao then
        begin
          CTRPessoa.preencherEntidade(mtLista, Pessoa);
          r:= CTRPessoa.excluir(Pessoa.idpessoa);
          TFunc.interpretarRetorno(r, false);
          pesquisar;
        end;
    end;
end;

procedure TfrmPrincipal.FormCreate(Sender: TObject);
begin
  CTRPessoa:= TCTRPessoa.Create;
  Pessoa:= TPessoa.Create;
  CTRPessoaEndereco:= TCTRPessoaEndereco.Create;
  PessoaEndereco:= TPessoaEndereco.Create;
  CTREndereco:= TCTREndereco.Create;
  CTREndereco_Integracao:= TCTREndereco_Integracao.Create;

  PC.ActivePageIndex:= 0;
end;

procedure TfrmPrincipal.FormKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
  	if not ((ActiveControl is TMemo) or (ActiveControl is TRichEdit)) then
  		begin
    		Key := #0;
    		Perform(WM_NEXTDLGCTL, 0, 0);
  		end;
end;

procedure TfrmPrincipal.limparCampos;
begin
  editId.Text:= '';
  cbTipoPessoa.ItemIndex:= 1;
  editNome.Text:= '';
  editSobrenome.Text := '';
  editDocumento.Text := '';
  editDataRegistro.clear;

  editCEP.Text := '';
  editEndereco.Text := '';
  editComplemento.Text := '';
  editUF.Text := '';
  editCidade.Text := '';
  editBairro.Text := '';
  editDataRegistro.Text := FormatDateTime('dd/mm/yyyy', now);

end;

procedure TfrmPrincipal.pesquisar;
begin
  CTRPessoa.listar(mtLista);
  BtEditar.Enabled:= not mtLista.IsEmpty;
  BtExcluir.Enabled:= not mtLista.IsEmpty;
end;

procedure TfrmPrincipal.salvar;
var
  r: TRetornoApi;
  d: TDateTime;
begin
  if TryStrToDate(editDataRegistro.Text, d) then
    begin
      PessoaEndereco.Pessoa.idpessoa:= editId.Text;
      PessoaEndereco.Pessoa.flnatureza := intToStr(cbTipoPessoa.ItemIndex);
      PessoaEndereco.Pessoa.nmprimeiro:= editNome.Text;
      PessoaEndereco.Pessoa.nmsegundo := editSobrenome.Text;
      PessoaEndereco.Pessoa.dsdocumento := editDocumento.Text;
      PessoaEndereco.Pessoa.dtregistro := editDataRegistro.Text;

      PessoaEndereco.endereco.dscep := editCEP.Text;

      PessoaEndereco.endereco_integracao.nmlogradouro:= editEndereco.Text;
      PessoaEndereco.endereco_integracao.dscomplemento:= editComplemento.Text;
      PessoaEndereco.endereco_integracao.dsuf := editUF.Text;
      PessoaEndereco.endereco_integracao.nmcidade := editCidade.Text;
      PessoaEndereco.endereco_integracao.nmbairro := editBairro.Text;

      r := CTRPessoaEndereco.salvar(PessoaEndereco);

      if TFunc.interpretarRetorno(r) then
        begin
          limparCampos;
        end;
    end
  else
    begin
      ShowMessage('Data inválida!');
    end;

end;

procedure TfrmPrincipal.SpeedButton1Click(Sender: TObject);
begin
  pesquisar;
end;

procedure TfrmPrincipal.SpeedButton2Click(Sender: TObject);
begin
  salvar;
end;

end.
